version: "3.9"
services:
  postgres:
    image: postgres:13.3
    environment:
      POSTGRES_DB: "prod_db"
      POSTGRES_USER: "prod_user"
      POSTGRES_PASSWORD: "production"
    ports:
        - "46873:5432"
  web:
    depends_on:
        - "postgres"
    build:
        context: .
        dockerfile: app/Dockerfile
    ports:
        - "8002:8000"
    environment:
        - DATABASE_URL=postgresql://prod_user:production@postgres:5432/prod_db
    extra_hosts:
        - "host.docker.internal:host-gateway"
  init:
    depends_on:
        - "postgres"
        - "web"
    build: 
        context: . 
        dockerfile: utils/Dockerfile
    environment:
        - DATABASE_URL=postgresql://prod_user:production@postgres:5432/prod_db

  computations:
    depends_on:
        - "postgres"
        - "web"
        - "init"
    build: 
        context: .
        dockerfile: controller/Dockerfile
    environment:
        - DATABASE_URL=postgresql://prod_user:production@postgres:5432/prod_db

  front-web:
    container_name: react_app_web_prod
    image: react_app_web_prod:1.0.0
    build:
      context: frontend/web
      target: production
      dockerfile: Dockerfile
    command: yarn run start
    ports:
      - 8080:8080
    restart: unless-stopped
  front-mobile:
    container_name: react_app_mobile_prod
    image: react_app_mobile_prod:1.0.0
    build:
      context: frontend/mobile
      target: production
      dockerfile: Dockerfile
    command: yarn run start
    ports:
      - 8081:8081
    restart: unless-stopped